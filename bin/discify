#!/usr/bin/env node

var optimist = require('optimist')
var open = require('opener')
var path = require('path')
var disc = require('../')
var fs = require('fs')

var argv = optimist
  .usage('$0 [file(s)...] {options}')

  .alias('h', 'help')
  .describe('h', 'Displays these instructions.')

  .alias('o', 'output')
  .describe('o', 'Output path of the bundle. Defaults to stdout.')

  .alias('t', 'transform')
  .describe('t', 'Browserify transform stream(s) to use.')

  .describe('extension', 'Consider files with specified EXTENSION as modules, this option can used multiple times.')

  .alias('O', 'open')
  .describe('O', 'Open the file immediately.')

  .alias('n', 'noparse')
  .describe('n', 'Omit file from parse.')

  .argv

var files = argv._ || []

files = Array.isArray(files)
  ?  files
  : [files]

files = files.map(function(name) {
  return path.resolve(name)
})

if (!files.length || argv.help) {
  optimist.showHelp()
  process.exit(1)
}

disc.bundle({
    files: files
  , transforms: argv.transform || []
  , extensions: argv.extension || []
  , noparse: argv.noparse || []
}, function(err, html) {
  if (err) throw err

  if (argv.open) return host(html)

  if (argv.output) {
    fs.writeFileSync(argv.output, html)
  } else {
    console.log(html)
  }
})

function host(html) {
  return require('http').createServer(function(req, res) {
    res.end(html)
  }).listen(9977, function() {
    console.error('Listening on http://localhost:9977')
    open('http://localhost:9977')
  })
}
